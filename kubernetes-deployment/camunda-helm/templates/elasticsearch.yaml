apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: elastic
  name: elastic
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  selector:
    matchLabels:
      app: elasticsearch
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
      - name: vm-max-fix
        image: busybox
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: 'docker.elastic.co/elasticsearch/elasticsearch:{{.Values.elasticsearch.version }}'
        imagePullPolicy: IfNotPresent
        ports:
            - containerPort: 9200
              protocol: TCP
            - containerPort: 9300
              protocol: TCP
        env:
        - name: node.name
          value: "elasticsearch"
        - name: cluster.initial_master_nodes
          value: "elasticsearch"
        - name: bootstrap.memory_lock
          value: "false"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: xpack.security.enabled
          value: "false"
        #- name: discovery.type  # Crashes local deployment
        #  value: single-node
        - name: cluster.routing.allocation.disk.threshold_enabled
          value: "false"
        resources:
          requests:
            memory: "1Gi"
        volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elastic
      restartPolicy: Always
      volumes:
        - name: elastic
          persistentVolumeClaim:
            claimName: elastic
        
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  type: ClusterIP
  selector:
    app: elasticsearch
  ports:
    - protocol: TCP
      name: http
      port: 9200
      targetPort: 9200