apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-core.yaml -o helm -c
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: connectors
  name: connectors
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: connectors
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-core.yaml -o helm -c
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: connectors
    spec:
      containers:
        - env:
            - name: CAMUNDA_OPERATE_CLIENT_PASSWORD
              value: demo
            - name: CAMUNDA_OPERATE_CLIENT_URL
              value: http://operate:8080
            - name: CAMUNDA_OPERATE_CLIENT_USERNAME
              value: demo
            - name: ZEEBE_CLIENT_BROKER_GATEWAY-ADDRESS
              value: zeebe:26500
            - name: ZEEBE_CLIENT_SECURITY_PLAINTEXT
              value: "true"
            - name: management.endpoint.health.probes.enabled
              value: "true"
            - name: management.endpoints.web.exposure.include
              value: health
          image: 'camunda/connectors-bundle:{{ .Values.camunda.connectors.version }}'
          imagePullPolicy: IfNotPresent

          livenessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              #httpHeaders:
              #- name: Custom-Header
              #  value: Awesome
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 3
            #livenessProbe:
            #  exec:
            #    command:
            #      - curl -f http://localhost:8080/actuator/health/readiness
            #  failureThreshold: 5
            #  initialDelaySeconds: 30
            #  periodSeconds: 30
            #  timeoutSeconds: 1
          name: connectors
          ports:
            - containerPort: 8080
              protocol: TCP
      restartPolicy: Always
